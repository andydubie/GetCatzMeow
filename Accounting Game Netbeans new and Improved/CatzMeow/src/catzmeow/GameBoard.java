/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package catzmeow;
import java.awt.Toolkit;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
/**
 *
 * @author lpfliger
 */
public class GameBoard extends javax.swing.JFrame {

        static String getMoney(JLabel lblMoney) {
        String lblMoney2;
        lblMoney2 = lblMoney.getText();
         //When the button, label, textbox, etc. is not static the 
        // compiler will throw back an error. Go to that item on the 
        // form, right click, select customize code, then at the bottom
        // check the box that says "static". That will now make (in this
        // case lblMoney) static so you can then perform getText() on it.
        // - Andrew Dubiel
        return lblMoney2;
        }
        static String getScore(JLabel lblScore) {
        String lblScore2;
        lblScore2 = lblScore.getText();
        return lblScore2;
        }
        
    
    
public static String CorrectDebit;
public static String CorrectCredit;
public static int counter = 0;
public static String CreditBalance;
public static String DebitBalance;
public static int Money=0;
public static int Score=0;
public static int Cashbalance=0;

    /**
     * Creates new form GameBoard
     */
    public GameBoard() {
        
        initComponents();
        
txtJournal.setText(null);
lblRoll.setVisible(false);
cboDebit.setSelectedIndex(-1);
cboCredit.setSelectedIndex(-1);
radPrepaid.setVisible(false);
radPayPerMonth.setVisible(false);
lblMoney.setText("$" +Money);
int FirstScore=0;
String strScore=Integer.toString(FirstScore);
lblScore.setText(strScore);

txtJournal.setText("You invest $10,000 to start your mobile pet grooming business");

String[] FirstDebit = new String[] {"Interest Expense", "Cash", "Contributed Capital", "Unearned Revenue"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
for (Object item : FirstDebit) {
    cboDebit.addItem(item);
}
    

String[] FirstCredit = new String[] {"Interest Expense", "Cash", "Contributed Capital", "Unearned Revenue"};
cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
for (Object item : FirstCredit) {
    cboCredit.addItem(item);
}

DebitBalance="10000";
CreditBalance="10000";
CorrectDebit=FirstDebit[1];
CorrectCredit=FirstCredit[2];
Cashbalance=10000;
btnSubmitAnswer.setEnabled(true);
cboDebit.setEnabled(true);
cboCredit.setEnabled(true);
txtCredit.setEnabled(true);
txtDebit.setEnabled(true);
btnRoll.setEnabled(false);
btnExit.setEnabled(false);


    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSubmitAnswer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblCompanyName = new javax.swing.JLabel();
        lblJournal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDebit = new javax.swing.JTextPane();
        cboDebit = new javax.swing.JComboBox();
        cboCredit = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCredit = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblMoney = new javax.swing.JLabel();
        lblScore = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtJournal = new javax.swing.JTextPane();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        jLabel2 = new javax.swing.JLabel();
        btnRoll = new javax.swing.JButton();
        lblRoll = new javax.swing.JLabel();
        radPrepaid = new javax.swing.JRadioButton();
        radPayPerMonth = new javax.swing.JRadioButton();
        btnExit = new javax.swing.JButton();
        btnLoan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1352, 818));

        btnSubmitAnswer.setText("Submit");
        btnSubmitAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitAnswerActionPerformed(evt);
            }
        });

        lblCompanyName.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        lblCompanyName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCompanyName.setText("Company Name");

        lblJournal.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lblJournal.setText("Journal Entry");

        jScrollPane1.setViewportView(txtDebit);

        cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "item 1", "Item 2", "Item 3", "Advertising Expense" }));

        cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jScrollPane2.setViewportView(txtCredit);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Cash Balance");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Score");

        lblMoney.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblMoney.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMoney.setText("$1,200");

        lblScore.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScore.setText("500");

        txtJournal.setEditable(false);
        txtJournal.setText("This is an example of a question. This question will ask the user to select a debit and credit, along with the dollar amount below.");
        jScrollPane3.setViewportView(txtJournal);

        jLabel7.setText("Select The Correct Debit");

        jLabel8.setText("Select The Correct Credit");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img src/lifegameboard.jpg"))); // NOI18N

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(72, 72, 72))
        );

        btnRoll.setText("Roll");
        btnRoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRollActionPerformed(evt);
            }
        });

        lblRoll.setText("jLabel5");

        radPrepaid.setText("Prepaid(Save $100)");

        radPayPerMonth.setText("Pay for Month($600 per Month)");

        btnExit.setText("Exit Game");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnLoan.setText("Loan");
        btnLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                                    .addComponent(lblMoney, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblScore, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(45, 45, 45)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cboDebit, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnRoll, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblRoll)
                                .addGap(114, 114, 114))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(76, 76, 76)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(btnLoan)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExit)
                                .addGap(67, 67, 67))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addGap(105, 105, 105))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnSubmitAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(100, 100, 100)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(cboCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(36, 36, 36))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblJournal)
                                .addGap(100, 100, 100))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(radPrepaid)
                                .addGap(83, 83, 83)
                                .addComponent(radPayPerMonth)
                                .addContainerGap())))))
            .addComponent(lblCompanyName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCompanyName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblJournal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radPrepaid)
                            .addComponent(radPayPerMonth))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel7)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboDebit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addComponent(btnSubmitAnswer)
                                .addGap(43, 43, 43)
                                .addComponent(btnRoll))
                            .addComponent(lblRoll))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLoan)
                            .addComponent(btnExit))
                        .addGap(54, 54, 54)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRollActionPerformed
 
        cboDebit.setSelectedIndex(-1);
cboCredit.setSelectedIndex(-1);
        int min = 1;
        int max = 22;
      
        
        
                    int randomnum;
            randomnum= min + (int)(Math.random()*max);
            //randomnum=2;
            //System.out.println(randomnum);
            int Question = randomnum;
            String JournalEntry;
        switch (Question) {
                case 1:  JournalEntry = "You borrow $6,000 from the bank, signing a note that is due in 3 months at 4%";
                  
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;


               // String Answer="Cash";
                
                String[] Debit = new String[] {"Interest Expense", "Cash", "Accounts Recievable", "Unearned Revenue"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit) {
    cboDebit.addItem(item);
}



                String[] Credit = new String[] {"Interest Expense", "Notes Payable", "Accounts Recievable", "Unearned Revenue"};

                cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

        
for (Object item : Credit) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit[1];
                 CorrectCredit=Credit[1];
                 CreditBalance = "6000";
                 DebitBalance = "6000";
                 Cashbalance=6000;
                break;
                
                case 2:  JournalEntry = "Accrue the interest on your note at the end of the month.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                cboCredit.setSelectedIndex(-1);
                counter = 0;
                
                String[] Debit2 = { "Unearned Revenue", "Wages Expense", "Interest Expense", "Cash"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit2) {
    cboDebit.addItem(item);
}

                              
                String[] Credit2 = new String[] {"Interest Expense", "Cash", "Accounts Recievable", "Unearned Revenue"};

                cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

        
for (Object item : Credit2) {
    cboCredit.addItem(item);
}
CorrectDebit=Debit2[2];
CorrectCredit=Credit2[1];
                 CreditBalance = "20";
                 DebitBalance = "20";
                 Cashbalance=-20;

                         break;
                case 3:  JournalEntry = "Purchase a used RV for $25,000. Put $5,000 down and sign a note for the balance. The note carries 5% interest and is payable in full in 3 years.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                cboCredit.setSelectedIndex(-1);
                counter = 0;
                
                String[] Debit3 = { "Cash", "Equipment", "Wages Expense", "Professional Fees Expense"};
                          
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
            
for (Object item : Debit3) {
    cboDebit.addItem(item);
}                        


String[] Credit3 = new String[] {"Interest Expense", "Notes Payable", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit3) {
    cboCredit.addItem(item);
}
CorrectDebit=Debit3[1];
CorrectCredit=Credit3[3];
                 CreditBalance = "5000";
                 DebitBalance = "25000";
                 Cashbalance=-5000;
                break;
                    
                    
                    
                case 4:  JournalEntry = "Purchase a large pet wash tub for $1,500 from All Your Pets store.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                counter = 0;
                
                String[] Debit4 = { "Supplies", "Equipment", "Wages Expense", "Cash"};

                 txtJournal.setText(JournalEntry);
                cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit4) {
    cboDebit.addItem(item);
}

String[] Credit4 = new String[] {"Cash", "Notes Payable", "Accounts Recievable", "Interest Expense"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit4) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit4[1];
                 CorrectCredit=Credit4[0];
                 CreditBalance = "1500";
                 DebitBalance = "1500";
                 Cashbalance=-1500;
                         break;
                case 5:  JournalEntry = "Purchase 2 electric clippers at $250 each.";
               
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                cboCredit.setSelectedIndex(-1);
                counter = 0;
                
                String[] Debit5 = { "Supplies Expense", "Supplies", "Cash", "Equipment"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit5) {
    cboDebit.addItem(item);
}

String[] Credit5 = new String[] {"Interest Expense", "Cash", "Accounts Recievable", "Notes Payable"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit5) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit5[3];
                 CorrectCredit=Credit5[1];
                 CreditBalance = "500";
                 DebitBalance = "500";
                 Cashbalance=-500;
                         break;
                case 6:  JournalEntry = "Purchase a total of $150 worth of shampoo, conditioner, bows and bandanas, nail polish, etc.";
               
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                cboCredit.setSelectedIndex(-1);
                counter = 0;
                
                String[] Debit6 = { "Supplies", "Cash", "Equipment", "Supplies Expense"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):

for (Object item : Debit6) {
    cboDebit.addItem(item);
}

String[] Credit6 = new String[] {"Interest Expense", "Notes Payable", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit6) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit6[0];
                 CorrectCredit=Credit6[3];
                 CreditBalance = "150";
                 DebitBalance = "150";
                 Cashbalance=-150;
                         break;
                case 7:  JournalEntry = "Provide grooming services for customers' pets for the day. Collect $300.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit7 = { "Grooming Revenue", "Accounts Receivable", "Cash", "Unearned Revenue"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit7) {
    cboDebit.addItem(item);
}

String[] Credit7 = new String[] {"Interest Expense", "Grooming Revenue", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit7) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit7[2];
                 CorrectCredit=Credit7[1];
                 CreditBalance = "300";
                 DebitBalance = "300";
                 Cashbalance=300;
                         break;
                case 8:  JournalEntry = "Provide grooming services for the Humane Society and give them 30 days to pay. You charge them $1,500.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit8 = { "Cash", "Unearned Revenue", "Grooming Revenue", "Accounts Recievable"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit8) {
    cboDebit.addItem(item);
}

String[] Credit8 = new String[] {"Interest Expense", "Notes Payable", "Grooming Revenue", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit8) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit8[3];
                 CorrectCredit=Credit8[2];
                 CreditBalance = "1500";
                 DebitBalance = "1500";
                 Cashbalance=0;
                         break;
                case 9:  JournalEntry = "Issue gift cards to customers for $250.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit9 = { "Notes Payable", "Cash", "Unearned Revenue", "Accounts Recievable"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit9) {
    cboDebit.addItem(item);
}
String[] Credit9 = new String[] {"Unearned Revenue", "Notes Payable", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit9) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit9[1];
                 CorrectCredit=Credit9[0];
                 CreditBalance = "250";
                 DebitBalance = "250";
                 Cashbalance=250;
                         break;
                case 10: JournalEntry = "Pay your grooming assistant for a week of work. He worked 30 hours for $10 an hour. Ignore Payroll taxes.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit10 = { "Cash", "Professional Fee Expense", "Accounts Payable", "Wages Expense"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit10) {
    cboDebit.addItem(item);
}        

String[] Credit10 = new String[] {"Interest Expense", "Notes Payable", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit10) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit10[3];
                 CorrectCredit=Credit10[3];
                 CreditBalance = "300";
                 DebitBalance = "300";
                 Cashbalance=-300;
                break;
                case 11: JournalEntry = "Need fuel for Rv. To fill it up costs $200. You have an account at the local gas station where you can charge you fuel and they will bill you once a month.";
               
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit11 = { "Automobile Expense", "Cash", "Accounts Payable", "Wages Expense"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit11) {
    cboDebit.addItem(item);
}     
String[] Credit11 = new String[] {"Interest Expense", "Notes Payable", "Accounts Payable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit11) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit11[0];
                 CorrectCredit=Credit11[2];
                 CreditBalance = "200";
                 DebitBalance = "200";
                 Cashbalance=-200;
                break;
                case 12: JournalEntry = "You set up a Facebook account for you business, as well as a Twitter account.'/n' You also know that to reach an older audience you need traditional advertising and put an ad in the local paper. The add will cost $300 and the paper will send you a bill.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit12 = { "Advertising Exspense", "Accounts Payable", "Wages Expense", "Cash"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit12) {
    cboDebit.addItem(item);
}
String[] Credit12 = new String[] {"Accounts Payable", "Notes Payable", "Accounts Recievable", "Cash=Correct"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit12) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit12[0];
                 CorrectCredit=Credit12[3];
                 CreditBalance = "300";
                 DebitBalance = "300";
                 Cashbalance=0;
                break;
                case 13: JournalEntry = "You meet with your Insurance agent and find out you need both automobile insurance and business insurance. The combined cost is $600 a month, or you can pay for one year in advanced and save $100 a month.";
                
                radPrepaid.setVisible(true);
                radPayPerMonth.setVisible(true);
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit13 = {"Wages Expense","Prepaid Insurance", "Accounts Payable", "Interest Expense"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit13) {
    cboDebit.addItem(item);
}       
String[] Credit13 = new String[] {"Interest Expense", "Notes Payable", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit13) {
    cboCredit.addItem(item);
}
                
                 CorrectDebit=Debit13[1];
                 CorrectCredit=Credit13[3];
                 CreditBalance = "6000";
                 DebitBalance = "6000";
                 Cashbalance=-6000;
                break;
                case 14: JournalEntry = "At the end of the month, you determine that you used $75 worth of supplies.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit14 = { "Supplies", "Cash", "Supplies Expense", "Equipment"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit14) {
    cboDebit.addItem(item);
}
String[] Credit14 = new String[] {"Supplies", "Notes Payable", "Supplies Expense", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit14) {
    cboCredit.addItem(item);
}
                 CorrectDebit=Debit14[2];
                 CorrectCredit=Credit14[0];
                 CreditBalance = "75";
                 DebitBalance = "75";
                 Cashbalance=-75;
                break;
                case 15: JournalEntry = "Two customers used $25 gift cards to pay for grooming services.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                 
                String[] Debit15 = { "Cash", "Accounts Recievable", "Grooming Revenue", "Unearned Revenue"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit15) {
    cboDebit.addItem(item);
}     
String[] Credit15 = new String[] {"Interest Expense", "Grooming Revenue", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit15) {
    cboCredit.addItem(item);
}
                 CorrectDebit=Debit15[3];
                 CorrectCredit=Credit15[1];
                 CreditBalance = "50";
                 DebitBalance = "50";
                 Cashbalance=50;
                break;
                case 16: JournalEntry = "A dog bit your grooming assistant requiring 5 stitches. You can consult with an attorney. The attorney charges you $400 for his advice.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit16 = { "Depreciation Expense", "Professional Fees Expense", "Accounts Payable", "Cash"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit16) {
    cboDebit.addItem(item);
}      
String[] Credit16 = new String[] {"Interest Expense", "Notes Payable", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit16) {
    cboCredit.addItem(item);
}
                 CorrectDebit=Debit16[1];
                 CorrectCredit=Credit16[3];
                 CreditBalance = "400";
                 DebitBalance = "400";
                 Cashbalance=-400;
                break;
                case 17: JournalEntry = "You get your cell phone bill for $80 and write a check.";
               
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit17 = {"Professional Fees Expense", "Telephone Expense", "Accounts Payable", "Cash" };
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit17) {
    cboDebit.addItem(item);
}    
String[] Credit17 = new String[] {"Cash", "Notes Payable", "Accounts Recievable", "Interest Expense"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit17) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit17[1];
                 CorrectCredit=Credit17[0];
                 CreditBalance = "80";
                 DebitBalance = "80";
                 Cashbalance=-80;
                break;
                case 18: JournalEntry = "Record derpreciation expense of $450 for the month.";
               
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit18 = { "Depreciation Expense", "Wages Expense", "Accounts Payable", "Interest Expense"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit18) {
    cboDebit.addItem(item);
}
String[] Credit18 = new String[] {"Interest Expense", "Accumulated Depreciation - Equipment", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit18) {
    cboCredit.addItem(item);
}
                 CorrectDebit=Debit18[0];
                 CorrectCredit=Credit18[2];
                 CreditBalance = "450";
                 DebitBalance = "450";
                 Cashbalance=-450;

                break;
                case 19: JournalEntry = "Wash the RV at the end of the week for $25.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit19 = {"Notes Payable", "Automobile Expense", "Cash", "Accounts Payable" };
 cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit19) {
    cboDebit.addItem(item);
}     
String[] Credit19 = new String[] {"Interest Expense", "Notes Payable", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit19) {
    cboCredit.addItem(item);
}
                 CorrectDebit=Debit19[1];
                 CorrectCredit=Credit19[3];
                 CreditBalance = "25";
                 DebitBalance = "25";
                 Cashbalance=-25;
                break;
                case 20: JournalEntry = "Got the bill from the newspaper for $300. Write a check to pay this bill.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit20 = { "Depreciation Expense", "Professional Fee Expense", "Cash", "Accounts Payable"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit20) {
    cboDebit.addItem(item);
}
String[] Credit20 = new String[] {"Interest Expense", "Notes Payable", "Cash", "Accounts Recievable"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit20) {
    cboCredit.addItem(item);
}
                 CorrectDebit=Debit20[3];
                 CorrectCredit=Credit20[2];
                 CreditBalance = "300";
                 DebitBalance = "300";
                 Cashbalance=-300;
                break;
                case 21: JournalEntry = "Recieve a check from the Human Society for $1500.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit21 = { "Grooming Revenue", "Cash", "Accounts Recievable", "Unearned Revenue"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit21) {
    cboDebit.addItem(item);
}
String[] Credit21 = new String[] {"Interest Expense", "Notes Payable", "Accounts Recievable", "Cash"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit21) {
    cboCredit.addItem(item);
}
                 CorrectDebit=Debit21[1];
                 CorrectCredit=Credit21[2];
                 CreditBalance = "1500";
                 DebitBalance = "1500";
                 Cashbalance=1500;
                break;
                case 22: JournalEntry = "The RV broke down and it will cost you $700 for a new fuel pump and oil change.";
                
                 txtJournal.setText(JournalEntry);
                 cboDebit.setSelectedIndex(-1);
                 cboCredit.setSelectedIndex(-1);
                 counter = 0;
                 
cboCredit.setSelectedIndex(-1);
                
                String[] Debit22 = { "Repairs and Maintenance Expense", "Depreciation Expense", "Automobile Expense", "Professional Fee Expense"};
cboDebit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));
               // JComboBox<String> cboDebit = new JComboBox<>(Debit);
                //add to the parent container (e.g. a JFrame):
for (Object item : Debit22) {
    cboDebit.addItem(item);
} 
String[] Credit22 = new String[] {"Interest Expense", "Cash", "Accounts Recievable", "Notes Payable"};

               cboCredit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { }));

for (Object item : Credit22) {
    cboCredit.addItem(item);
}

                 CorrectDebit=Debit22[0];
                 CorrectCredit=Credit22[1];
                 CreditBalance = "700";
                 DebitBalance = "700";
                 Cashbalance=-700;
                break;
            }       
        
        cboDebit.setEnabled(true);
        cboCredit.setEnabled(true);
        btnSubmitAnswer.setEnabled(true);
        txtCredit.setEnabled(true);
        txtDebit.setEnabled(true);
        btnRoll.setEnabled(false);
        
 int min2 = 1;
        int max2 = 6;
        
                    int randomnum2;
            randomnum2= min2 + (int)(Math.random()*max2);
lblRoll.setText("You rolled a " + randomnum2);
lblRoll.setVisible(true);
    }//GEN-LAST:event_btnRollActionPerformed

    

    
    private void btnSubmitAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitAnswerActionPerformed
Object selected = cboDebit.getSelectedItem();
Object selectedCredit= cboCredit.getSelectedItem();
Object Credits = txtCredit.getText();
Object Debits = txtDebit.getText();
        String test = selected.toString();
        String credit = selectedCredit.toString();
        String CreditB= Credits.toString();
      String DebitB= Debits.toString();
        
        int Problem = 0;

            if (test.equals(CorrectDebit) && (credit.equals(CorrectCredit)) && CreditB.equals(CreditBalance) && DebitB.equals(DebitBalance) || Problem == 1){
                Problem +=1;
Money+=Cashbalance;
lblMoney.setText("$" + Money);
if(counter==0 && Problem ==1){
    Score+=30;
}else if(counter==1 && Problem ==1){
    Score=20;
}else{
    Score=10;
}
String myScore;
myScore=Integer.toString(Score);
lblScore.setText(myScore);
                //System.out.print("Correct");
                JOptionPane.showMessageDialog(null,"Congrats!! You are correct.","Correct",JOptionPane.WARNING_MESSAGE);
            }else if (counter == 2){
                JOptionPane.showMessageDialog(null,"Sorry... you are out of tries.","Incorrect",JOptionPane.WARNING_MESSAGE);
                btnSubmitAnswer.setEnabled(false);
                Problem +=1;
                
            }else{
                                if (!test.equals(CorrectDebit) && (!credit.equals(CorrectCredit)) && !CreditB.equals(CreditBalance) && !DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, Nothing is Correct","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if (!test.equals(CorrectDebit) && (!credit.equals(CorrectCredit)) && !CreditB.equals(CreditBalance) && DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, Only the Debit Balance is Correct","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if(!test.equals(CorrectDebit) && (!credit.equals(CorrectCredit)) && CreditB.equals(CreditBalance) && !DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, Only the Credit Balance is Correct","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if(!test.equals(CorrectDebit) && (credit.equals(CorrectCredit)) && !CreditB.equals(CreditBalance) && !DebitB.equals(DebitBalance)){
                JOptionPane.showMessageDialog(null,"Sorry, Only the Credit Account is Correct","Incorrect",JOptionPane.WARNING_MESSAGE);
            }
                else if(test.equals(CorrectDebit) && (!credit.equals(CorrectCredit)) && !CreditB.equals(CreditBalance) && !DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, Only the Debit Account is Incorrect","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if(!test.equals(CorrectDebit) && (!credit.equals(CorrectCredit)) && CreditB.equals(CreditBalance) && DebitB.equals(DebitBalance)){
                JOptionPane.showMessageDialog(null,"Sorry, Only the Balances are Correct","Incorrect",JOptionPane.WARNING_MESSAGE);
            }
                else if(!test.equals(CorrectDebit) && (credit.equals(CorrectCredit)) && !CreditB.equals(CreditBalance) && DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, Only the Credit Account and Debit Balance are Correct","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if(!test.equals(CorrectDebit) && (credit.equals(CorrectCredit)) && CreditB.equals(CreditBalance) && !DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, Only the Credit Account and Credit Balance are correct","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if(test.equals(CorrectDebit) && (!credit.equals(CorrectCredit)) && !CreditB.equals(CreditBalance) && DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, Only the Debit Account and Debit Balance are Correct","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if(test.equals(CorrectDebit) && (!credit.equals(CorrectCredit)) && CreditB.equals(CreditBalance) && !DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, Only the Credit Balance and Debit ComboBox are correct","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if(test.equals(CorrectDebit) && (credit.equals(CorrectCredit)) && !CreditB.equals(CreditBalance) && !DebitB.equals(DebitBalance)){
                JOptionPane.showMessageDialog(null,"Sorry, Only the Accounts are Correct","Incorrect",JOptionPane.WARNING_MESSAGE);
            }
                else if (test.equals(CorrectDebit) && (!credit.equals(CorrectCredit)) && CreditB.equals(CreditBalance) && DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, The Credit Account is Incorrect","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if(test.equals(CorrectDebit) && (credit.equals(CorrectCredit)) && CreditB.equals(CreditBalance) && !DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, The Debit Balance is Incorrect","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if(test.equals(CorrectDebit) && (credit.equals(CorrectCredit)) && !CreditB.equals(CreditBalance) && DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, The Credit Balance is Incorrect","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                else if (!test.equals(CorrectDebit) && (credit.equals(CorrectCredit)) && CreditB.equals(CreditBalance) && DebitB.equals(DebitBalance)){
                    JOptionPane.showMessageDialog(null,"Sorry, The Debit Account is Incorrect","Incorrect",JOptionPane.WARNING_MESSAGE);
                }
                                cboDebit.setEnabled(true);
        cboCredit.setEnabled(true);
                counter +=1;
        
        txtCredit.setEnabled(true);
        txtDebit.setEnabled(true);
               // System.out.print(counter);
            }
                       
        

//System.out.println(test);
        
        
        
if(Problem==1){

        cboDebit.setEnabled(false);
        cboCredit.setEnabled(false);
        btnSubmitAnswer.setEnabled(false);
        txtCredit.setEnabled(false);
        txtDebit.setEnabled(false);
        btnRoll.setEnabled(true);
        cboDebit.setSelectedIndex(-1);
        cboCredit.setSelectedIndex(-1);
        btnExit.setEnabled(true);
}
    }//GEN-LAST:event_btnSubmitAnswerActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        WriteToFile write = new WriteToFile();
        write.Excecute();
        
        ExitScreen board = new ExitScreen();
        board.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoanActionPerformed
       Loan money=new Loan();
       money.setVisible(true);
    }//GEN-LAST:event_btnLoanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnExit;
    public javax.swing.JButton btnLoan;
    public javax.swing.JButton btnRoll;
    public javax.swing.JButton btnSubmitAnswer;
    public javax.swing.JComboBox cboCredit;
    public javax.swing.JComboBox cboDebit;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JLabel lblCompanyName;
    public javax.swing.JLabel lblJournal;
    public static javax.swing.JLabel lblMoney;
    public javax.swing.JLabel lblRoll;
    public static javax.swing.JLabel lblScore;
    public java.awt.Panel panel1;
    public javax.swing.JRadioButton radPayPerMonth;
    public javax.swing.JRadioButton radPrepaid;
    public javax.swing.JTextPane txtCredit;
    public javax.swing.JTextPane txtDebit;
    public javax.swing.JTextPane txtJournal;
    // End of variables declaration//GEN-END:variables
}
